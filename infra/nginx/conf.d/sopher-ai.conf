# Sopher.AI Application Server Configuration

# HTTP Server (Redirect to HTTPS in production)
server {
    listen 80;
    server_name sopher.ai www.sopher.ai;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # Redirect to HTTPS (uncomment for production with SSL)
    # return 301 https://$server_name$request_uri;
    
    # Development configuration - serve directly
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        
        # Rate limiting
        limit_conn connections 50;
    }
}

# API Server Configuration
server {
    listen 80;
    server_name api.sopher.ai;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Robots-Tag "noindex, nofollow" always;
    
    # API routes
    location /api/ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
        
        # Rate limiting for API
        limit_req zone=api burst=120 delay=60;
        limit_conn connections 20;
    }
    
    # Health endpoints
    location ~ ^/(healthz|readyz|livez)$ {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        access_log off;
    }
    
    # Metrics endpoint (restrict access in production)
    location /api/metrics {
        # allow 10.0.0.0/8;     # Allow from internal networks
        # deny all;              # Deny from public
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Authentication endpoints with stricter rate limiting
    location ~ ^/api/(auth|login|register) {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Strict rate limiting for auth
        limit_req zone=login burst=10 delay=5;
        limit_conn connections 5;
    }
    
    # WebSocket support with secure upgrade handling
    location ~ ^/api/(ws|websocket) {
        # Only allow websocket upgrades to prevent H2C smuggling
        if ($http_upgrade != "websocket") {
            return 426;
        }
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade "websocket";
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for streaming
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 60s;
        
        # Disable buffering for real-time streaming
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;
        
        # Rate limiting for streaming
        limit_conn connections 10;
    }
    
    # Server-Sent Events (SSE) support - no upgrade headers needed
    location ~ ^/api/(stream|events) {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for streaming
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 60s;
        
        # Disable buffering for real-time streaming
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;
        
        # Rate limiting for streaming
        limit_conn connections 10;
    }
    
    # Deny access to sensitive paths
    location ~ /\. {
        deny all;
    }
    
    location ~ ^/(config|secrets|env) {
        deny all;
        return 404;
    }
}

# HTTPS Server Configuration (Production)
# Uncomment and configure for production deployment with SSL certificates
#
# server {
#     listen 443 ssl http2;
#     server_name sopher.ai www.sopher.ai;
#     
#     # SSL Configuration
#     ssl_certificate /etc/nginx/ssl/sopher.ai.pem;
#     ssl_certificate_key /etc/nginx/ssl/sopher.ai.key;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
#     
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000" always;
#     
#     location / {
#         proxy_pass http://frontend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
# }