# Production Environment Configuration Template
# Copy this file to .env.production and fill in the actual values
# WARNING: Never commit the actual .env.production file with real secrets!

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
POSTGRES_USER=postgres
POSTGRES_PASSWORD=CHANGE_ME_SECURE_PASSWORD_HERE
POSTGRES_DB=sopherai
DATABASE_URL=postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@postgres:5432/sopherai

# =============================================================================
# REDIS CONFIGURATION  
# =============================================================================
REDIS_URL=redis://redis:6379/0

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
JWT_SECRET=CHANGE_ME_GENERATE_SECURE_JWT_SECRET_KEY
JWT_EXPIRATION_HOURS=1
GRAFANA_SECRET_KEY=CHANGE_ME_GENERATE_SECURE_GRAFANA_SECRET
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=CHANGE_ME_SECURE_ADMIN_PASSWORD

# Generate CSP nonce for security headers
CSP_NONCE=CHANGE_ME_GENERATE_RANDOM_NONCE

# =============================================================================
# LLM API KEYS (REQUIRED)
# =============================================================================
ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here
OPENAI_API_KEY=sk-your-openai-key-here  
GOOGLE_API_KEY=your-google-ai-key-here

# =============================================================================
# MODEL CONFIGURATION
# =============================================================================
PRIMARY_MODEL=gpt-5
SECONDARY_MODEL=claude-sonnet-4-20250514
OVERFLOW_MODEL=gemini-2.5-pro

# =============================================================================
# COST CONTROLS AND BUDGETS
# =============================================================================
MONTHLY_BUDGET_USD=500
# Agent budget allocation percentages (should sum to 1.0)
WRITER_BUDGET_PCT=0.60
EDITOR_BUDGET_PCT=0.25
CONTINUITY_BUDGET_PCT=0.10
CONCEPT_BUDGET_PCT=0.03
OUTLINER_BUDGET_PCT=0.02

# =============================================================================
# CORS AND NETWORK CONFIGURATION
# =============================================================================
CORS_ORIGINS=https://sopher.ai,https://www.sopher.ai
ALLOWED_HOSTS=sopher.ai,www.sopher.ai,api.sopher.ai,localhost

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
ENVIRONMENT=production
LOG_LEVEL=INFO
DEBUG=false

# Frontend URLs
NEXT_PUBLIC_BACKEND_URL=https://api.sopher.ai
NEXT_PUBLIC_APP_NAME=Sopher.AI
NEXT_PUBLIC_APP_VERSION=1.0.0
NEXT_PUBLIC_ENVIRONMENT=production

# =============================================================================
# MONITORING AND METRICS
# =============================================================================
METRICS_ENABLED=true
PROMETHEUS_PORT=9000

# =============================================================================
# RATE LIMITING
# =============================================================================
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_BURST=120

# =============================================================================
# SSE STREAMING CONFIGURATION
# =============================================================================
SSE_KEEPALIVE_INTERVAL=30
SSE_RETRY_INTERVAL=5000

# =============================================================================
# WORKER CONFIGURATION
# =============================================================================
BACKEND_WORKERS=4
WORKER_CONNECTIONS=1000

# =============================================================================
# ANALYTICS (OPTIONAL)
# =============================================================================
NEXT_PUBLIC_ANALYTICS_ID=your-analytics-id-here

# =============================================================================
# PERFORMANCE AND CACHING
# =============================================================================
NEXT_PUBLIC_ENABLE_SW=true

# =============================================================================
# GCP/GKE SPECIFIC CONFIGURATION (OPTIONAL)
# =============================================================================
# Uncomment and configure for GKE deployment with GCP services

# GCP Project Configuration
# GCP_PROJECT_ID=your-gcp-project-id
# GCP_REGION=us-west1
# GKE_CLUSTER_NAME=sopher-ai-prod

# GCP Monitoring Integration  
# GCP_MONITORING_ENABLED=true
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# GCP Cloud SQL (if using managed PostgreSQL)
# CLOUD_SQL_CONNECTION_NAME=project:region:instance
# DATABASE_URL=postgresql+asyncpg://user:password@/database?host=/cloudsql/project:region:instance

# GCP Redis (if using Memorystore)
# REDIS_HOST=your-redis-host
# REDIS_PORT=6379
# REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0

# =============================================================================
# SSL/TLS CONFIGURATION (PRODUCTION)
# =============================================================================
# SSL_CERT_PATH=/etc/ssl/certs/sopher.ai.pem
# SSL_KEY_PATH=/etc/ssl/private/sopher.ai.key
# SSL_ENABLED=true

# =============================================================================
# BACKUP CONFIGURATION  
# =============================================================================
# BACKUP_ENABLED=true
# BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
# BACKUP_RETENTION_DAYS=30
# GCS_BACKUP_BUCKET=sopher-ai-backups

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# LOG_FORMAT=json
# LOG_FILE=/var/log/sopher-ai/app.log
# SYSLOG_ENABLED=false

# =============================================================================
# NOTES AND INSTRUCTIONS
# =============================================================================
# 
# 1. Security Best Practices:
#    - Generate strong, unique passwords and secrets
#    - Use different secrets for each environment (dev/staging/prod)
#    - Store secrets securely using GCP Secret Manager in production
#    - Never commit .env files with real secrets to version control
#
# 2. Database Setup:
#    - For production, consider using GCP Cloud SQL for managed PostgreSQL
#    - Enable automated backups and point-in-time recovery
#    - Configure appropriate connection pooling
#
# 3. Redis Setup:  
#    - For production, consider using GCP Memorystore for managed Redis
#    - Enable persistence and configure appropriate eviction policies
#
# 4. Monitoring:
#    - Set up GCP Monitoring and Logging for comprehensive observability
#    - Configure alerting policies based on the alerts.yml rules
#    - Consider using GCP Error Reporting for application errors
#
# 5. Performance:
#    - Adjust worker counts based on your GKE node resources
#    - Monitor and tune connection limits and timeouts
#    - Configure horizontal pod autoscaling based on metrics
#
# 6. Cost Management:
#    - Monitor your LLM API usage and costs closely
#    - Set up billing alerts in GCP
#    - Regularly review and optimize resource allocation
#
# 7. Security:
#    - Enable GKE workload identity for secure GCP service access
#    - Use network policies to restrict pod-to-pod communication  
#    - Regularly scan container images for vulnerabilities
#    - Configure proper RBAC permissions
#